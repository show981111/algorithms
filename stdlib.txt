reverse(s.begin(), s.end()) => reverse from s.begin() to s.end();

nth_element(nums.begin(), nums.begin() + k - 1, nums.end(), greater<int>());
    1,3) Linear in std::distance(first, last) on average.
    => getting Kth largest element(1-indexed)

next_permutation(iterator, iterator) -> boolean (in-place)
    https://en.cppreference.com/w/cpp/algorithm/next_permutation
    True if next permutation is possible
    false if permutation reaches end and it went back to first permutation

Unordered_map: .erase(key or iterator)
list: .erase(iterator), .remove(key): note that it erases all nodes with key